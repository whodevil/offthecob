name: PR Builder
on:
  - pull_request
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  USERNAME: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-west-2'
jobs:
  jib:
    uses: ./.github/workflows/jib.yaml
  terraform:
    name: 'Terraform-plan'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: './terraform'
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './terraform'
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: './terraform'
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './terraform'
  ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: install pre-reqs
        run: |
          sudo apt-get update
          sudo apt-get install python3 python3-pip npm yarn -y
          sudo pip install awscli
      - name: yarn install
        run: cd ui && yarn install
      - name: yarn build
        run: cd ui && yarn build
      - name: archive name
        run: echo "##[set-output name=name;]$(echo theagainagain-${GITHUB_SHA}.tar.gz)"
        id: archive_name
      - name: branch name
        run: echo "##[set-output name=name;]$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
        id: branch_name
      - name: tar ui
        run: mkdir build && tar -czvf build/${{steps.archive_name.outputs.name}} ui/build
      - name: upload pin file
        run: echo "${{steps.archive_name.outputs.name}}" > build/${{steps.branch_name.outputs.name}}
      - name: upload to s3
        run: |
          aws s3 cp build/${{steps.archive_name.outputs.name}} s3://theagainagain-assets/${{steps.archive_name.outputs.name}}
          aws s3 cp build/${{steps.branch_name.outputs.name}} s3://theagainagain-assets/build/${{steps.branch_name.outputs.name}}
