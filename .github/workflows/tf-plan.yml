name: "Terraform Plan"
on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      ZONE_ID:
        required: true
    inputs:
      environment:
        required: true
        type: string
      uiArtifactName:
        required: true
        type: string
      tag:
        required: true
        type: string
jobs:
  tf-plan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'us-west-2'
      TF_VAR_ZONE_ID: ${{ secrets.ZONE_ID }}
      TF_VAR_TAG: ${{ inputs.tag }}
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install awscli
      - run: aws ecr create-repository --repository-name ${{ github.repository }}-${{ inputs.environment }} || true
      - name: Log in to GitHub Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - run: echo "id=${{ steps.login-ecr.outputs.registry }}/${{ github.repository }}-${{ inputs.environment }}:${{ inputs.tag }}" >> $GITHUB_OUTPUT
        id: image
      - run: skopeo copy docker://ghcr.io/${{ github.repository }}:${{ inputs.tag }} docker://${{ steps.image.outputs.id }}
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.uiArtifactName }}
          path: terraform/
      - run: tar -xzf ${{ inputs.uiArtifactName }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.0
      - env:
          TF_VAR_API_IMAGE: ${{ steps.image.outputs.id }}
        run: |
          terraform fmt
          terraform init
          terraform validate
          terraform workspace select ${{ inputs.environment }}
          terraform plan -out=.tfPlan-${{ inputs.environment }}
      - uses: actions/upload-artifact@v3
        with:
          path: .tfPlan-${{ inputs.environment }}
